diff --git a/Modules/Setup.dist b/Modules/Setup.dist
index 40c10fa..8fec77b 100644
--- a/Modules/Setup.dist
+++ b/Modules/Setup.dist
@@ -122,7 +122,7 @@ _weakref _weakref.c             # weak references
 
 # The zipimport module is always imported at startup. Having it as a
 # builtin module avoids some bootstrapping problems and reduces overhead.
-zipimport zipimport.c
+# zipimport zipimport.c
 
 # The rest of the modules listed in this file are all commented out by
 # default.  Usually they can be detected and built as dynamically
@@ -170,7 +170,7 @@ GLHACK=-Dclear=__GLclear
 
 array arraymodule.c	# array objects
 cmath cmathmodule.c _math.c # -lm # complex math library functions
-math mathmodule.c _math.c # -lm # math library functions, e.g. sin()
+#math mathmodule.c #_math.c # -lm # math library functions, e.g. sin()
 _struct _struct.c	# binary structure packing/unpacking
 time timemodule.c # -lm # time operations and variables
 operator operator.c	# operator.add() and similar goodies
diff --git a/Python/import.c b/Python/import.c
index 722721b..fb83b87 100644
--- a/Python/import.c
+++ b/Python/import.c
@@ -966,6 +966,10 @@ write_compiled_module(PyCodeObject *co, char *cpathname, struct stat *srcstat, t
     /* Now write the true mtime (as a 32-bit field) */
     fseek(fp, 4L, 0);
     assert(mtime <= 0xFFFFFFFF);
+    if (Py_GETENV("SOURCE_DATE_EPOCH") != NULL) {
+      const char *epoch = Py_GETENV("SOURCE_DATE_EPOCH");
+      mtime = atoi(epoch);
+    }
     PyMarshal_WriteLongToFile((long)mtime, fp, Py_MARSHAL_VERSION);
     fflush(fp);
     fclose(fp);
